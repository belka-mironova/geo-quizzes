[{"/Users/belka/Desktop/React/geo-quizzes/src/index.js":"1","/Users/belka/Desktop/React/geo-quizzes/src/reportWebVitals.js":"2","/Users/belka/Desktop/React/geo-quizzes/src/components/App.js":"3","/Users/belka/Desktop/React/geo-quizzes/src/components/Splash/Splash.jsx":"4","/Users/belka/Desktop/React/geo-quizzes/src/components/Header/Header.jsx":"5","/Users/belka/Desktop/React/geo-quizzes/src/components/Footer/Footer.jsx":"6","/Users/belka/Desktop/React/geo-quizzes/src/components/Menu/Menu.jsx":"7","/Users/belka/Desktop/React/geo-quizzes/src/components/Authorization/Login.jsx":"8","/Users/belka/Desktop/React/geo-quizzes/src/components/Authorization/SignUp.jsx":"9","/Users/belka/Desktop/React/geo-quizzes/src/hooks/useForm.js":"10","/Users/belka/Desktop/React/geo-quizzes/src/utils/auth.js":"11","/Users/belka/Desktop/React/geo-quizzes/src/components/Authorization/InfoTooltip.jsx":"12","/Users/belka/Desktop/React/geo-quizzes/src/components/ProtectedRoute.js":"13","/Users/belka/Desktop/React/geo-quizzes/src/components/Profile/Profile.jsx":"14"},{"size":639,"mtime":1658906634098,"results":"15","hashOfConfig":"16"},{"size":362,"mtime":1657636063509,"results":"17","hashOfConfig":"16"},{"size":3144,"mtime":1658925716245,"results":"18","hashOfConfig":"16"},{"size":462,"mtime":1658928427536,"results":"19","hashOfConfig":"16"},{"size":1919,"mtime":1658925482208,"results":"20","hashOfConfig":"16"},{"size":529,"mtime":1657702436548,"results":"21","hashOfConfig":"16"},{"size":3982,"mtime":1658927008806,"results":"22","hashOfConfig":"16"},{"size":1619,"mtime":1658919778360,"results":"23","hashOfConfig":"16"},{"size":1626,"mtime":1658921848979,"results":"24","hashOfConfig":"16"},{"size":340,"mtime":1657698973665,"results":"25","hashOfConfig":"16"},{"size":968,"mtime":1657643364796,"results":"26","hashOfConfig":"16"},{"size":903,"mtime":1657703237097,"results":"27","hashOfConfig":"16"},{"size":222,"mtime":1657703071483,"results":"28","hashOfConfig":"16"},{"size":575,"mtime":1658926082144,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"n9eyqv",{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65"},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/belka/Desktop/React/geo-quizzes/src/index.js",[],[],"/Users/belka/Desktop/React/geo-quizzes/src/reportWebVitals.js",[],[],[],"/Users/belka/Desktop/React/geo-quizzes/src/components/App.js",["78"],[],"import React, { useState, useEffect } from \"react\";\nimport SignUp from \"./Authorization/SignUp\";\nimport Login from \"./Authorization/Login\";\nimport Splash from \"./Splash/Splash\";\nimport Header from \"./Header/Header\";\nimport Footer from \"./Footer/Footer\";\nimport Menu from \"./Menu/Menu\";\nimport Profile from \"./Profile/Profile\";\nimport InfoTooltip from \"./Authorization/InfoTooltip\";\nimport ProtectedRoute from \"./ProtectedRoute\";\nimport * as auth from \"../utils/auth.js\";\nimport { Route, Routes, useNavigate, Navigate } from \"react-router-dom\";\n\nfunction App() {\n  const navigate = useNavigate();\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [isRegisterSuccess, setRegisterInfo] = useState(false);\n  const [registerInfo, openRegisterInfo] = useState(false);\n  const [email, setEmail] = useState(\"\");\n\n  useEffect(() => {\n    tokenCheck();\n  }, []);\n\n  useEffect(() => {\n    if (isLoggedIn) {\n      navigate(\"/games\");\n    }\n  }, [isLoggedIn]);\n\n  const tokenCheck = () => {\n    const jwt = localStorage.getItem(\"jwt\");\n    if (jwt) {\n      auth\n        .checkToken(jwt)\n        .then((data) => {\n          if (data) {\n            setIsLoggedIn(true);\n            setEmail(data.data.email);\n          }\n        })\n        .catch((err) => {\n          console.error(err);\n        });\n    }\n  };\n\n  const handleLogin = (email, password) => {\n    auth\n      .authorize(email, password)\n      .then((res) => {\n        if (res.token) {\n          localStorage.setItem(\"jwt\", res.token);\n        }\n        setEmail(email);\n        setIsLoggedIn(true);\n        navigate(\"/games\");\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n  };\n\n  const handleRegister = (email, password) => {\n    auth\n      .register(password, email)\n      .then((data) => {\n        setRegisterInfo(true);\n        navigate(\"/login\");\n      })\n      .catch((err) => {\n        setRegisterInfo(false);\n        console.error(err);\n      })\n      .finally(() => {\n        openRegisterInfo(true);\n      });\n  };\n\n  const handleLogout = () => {\n    localStorage.removeItem(\"jwt\");\n    setEmail(\"\");\n    setIsLoggedIn(false);\n    navigate(\"/\");\n  };\n\n  const closeAllPopups = () => {\n\n    openRegisterInfo(false);\n\n  };\n\n  return (\n    <div>\n      <Header\n        isloggedIn={isLoggedIn}\n        handleLogout={handleLogout}\n        email={email}\n      />\n      <Routes>\n        <Route path=\"/\" element={<Splash />} />\n        <Route\n          path=\"/sign-up\"\n          element={<SignUp handleRegister={handleRegister} />}\n        />\n        <Route path=\"/login\" element={<Login handleLogin={handleLogin} />} />\n        <Route path=\"/games\" element={<ProtectedRoute isLoggedIn={isLoggedIn}> <Menu/> </ProtectedRoute>} />\n        <Route path=\"/profile\" element={<Profile email={email} />} />\n        <Route\n          path=\"*\"\n          element={\n            isLoggedIn ? <Navigate to=\"/games\" /> : <Navigate to=\"/sign-in\" />\n          }\n        />\n      </Routes>\n      <Footer />\n\n      <InfoTooltip\n        isCorrect={isRegisterSuccess}\n        onClose={closeAllPopups}\n        isOpen={registerInfo}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","/Users/belka/Desktop/React/geo-quizzes/src/components/Splash/Splash.jsx",["79"],[],"/Users/belka/Desktop/React/geo-quizzes/src/components/Header/Header.jsx",["80","81"],[],"import React, { useEffect, useState } from \"react\";\nimport { Routes, Route, Link } from \"react-router-dom\";\nimport styles from \"./header.module.scss\";\n\nfunction Header(props) {\n  const [windowPath, setWindowPath] = useState(window.location.pathname);\n\n  useEffect(() => {\n    setWindowPath(window.location.pathname);\n  }, [window.location.pathname]);\n\n  return (\n    <header className={styles.header}>\n      {!props.isloggedIn ? (\n        <Link to=\"/\">\n          <div className={styles.header__logo}></div>\n        </Link>\n      ) : (\n        <Link to=\"/games\">\n          <div className={styles.header__logo}></div>\n        </Link>\n      )}\n      <Routes>\n        <Route\n          exact\n          path=\"/\"\n          element={\n            <div className={styles.header__menu}>\n              <Link className={styles.header__link} to=\"/login\">\n                Login\n              </Link>\n              <Link className={styles.header__link} to=\"/sign-up\">\n                Sign-up\n              </Link>\n            </div>\n          }\n        ></Route>\n        <Route\n          path=\"/sign-up\"\n          element={\n            <Link className={styles.header__link} to=\"/login\">\n              Login\n            </Link>\n          }\n        ></Route>\n        <Route\n          path=\"/login\"\n          element={\n            <Link className={styles.header__link} to=\"/sign-up\">\n              Sign-up\n            </Link>\n          }\n        ></Route>\n        <Route\n          path=\"*\"\n          element={\n            <div>\n              <Link className={styles.header__profile} to=\"/profile\">\n                {props.email}\n              </Link>\n              <button\n                className={styles.header__link}\n                onClick={props.handleLogout}\n              >\n                Logout\n              </button>\n            </div>\n          }\n        ></Route>\n      </Routes>\n    </header>\n  );\n}\n\nexport default Header;\n","/Users/belka/Desktop/React/geo-quizzes/src/components/Footer/Footer.jsx",["82"],[],"import React from \"react\";\nimport styles from \"./footer.module.scss\";\nimport { Link } from \"react-router-dom\";\n\nfunction Footer() {\n  const year = new Date().getFullYear();\n  return (\n    <footer className={styles.footer}>\n      <div className={styles.footer__left}>\n        <p className={styles.footer__menu}>Ru</p>\n        <p className={`${styles.footer__menu} ${styles.underlined}`}>En</p>\n      </div>\n      <p className={styles.footer__copyright}>&copy;{year} Bella Mironova</p>\n    </footer>\n  );\n}\n\nexport default Footer;\n","/Users/belka/Desktop/React/geo-quizzes/src/components/Menu/Menu.jsx",["83","84","85","86"],[],"import React from \"react\";\nimport styles from \"./menu.module.scss\";\nimport peoples from \"../../images/ind4.jpeg\";\nimport dagestan from \"../../images/dagestan.avif\";\nimport tymen from \"../../images/tymen.avif\";\nimport spb from \"../../images/spb4.JPG\";\nimport chukotka from \"../../images/chukotka.avif\";\nimport bratsk from \"../../images/bratsk.JPG\";\nimport { Link } from \"react-router-dom\";\n\nexport default function Menu() {\n  return (\n    <div>\n      <section className={styles.grid}>\n        {/* <a\n          href=\"https://belka-mironova.github.io/IndigenousPeoplesRussia/\"\n          className={styles.grid__content}\n          target=\"_blank\"\n        > */}\n        <div className={styles.grid__content}>\n          <img\n            src={peoples}\n            alt=\"Indigenous Peoples Russia\"\n            className={styles.grid__item}\n          />\n          <div className={styles.grid__overlay}>\n            <h2 className={styles.grid__title}>Indigenous peoples</h2>\n            <div className={styles.links}>\n            <Link className={styles.link} to=\"/sign-up\">\n              Learn\n            </Link>\n            <Link className={styles.link} to=\"/sign-up\">\n              Play\n            </Link>\n            </div>\n          </div>\n          </div>\n        {/* </a> */}\n\n        {/* <a\n          href=\"https://belka-mironova.github.io/geo-quiz/\"\n          className={styles.grid__content}\n          target=\"_blank\"\n        > */}\n        <div className={styles.grid__content}>\n          <img\n            src={dagestan}\n            alt=\"Вид из окна поезда\"\n            className={styles.grid__item}\n          />\n          {/* <!-- <div className={styles.grid__item} style=\"background-color: #FA7755;\"></div> --> */}\n          <div className={styles.grid__overlay}>\n            <h2 className={styles.grid__title}>Regions</h2>\n            <div className={styles.links}>\n            <Link className={styles.link} to=\"/sign-up\">\n              Learn\n            </Link>\n            <Link className={styles.link} to=\"/sign-up\">\n              Play\n            </Link>\n            </div>\n            \n          </div>\n          </div>\n    \n        {/* </a> */}\n\n        <a href=\"\" className={styles.grid__content} target=\"_blank\">\n          <img src={tymen} alt=\"Тюмень\" className={styles.grid__item} />\n          {/* <!-- <div className={styles.grid__item} style=\"background-color: #EEB1D2;\"></div> --> */}\n          <div className={styles.grid__overlay}>\n            <h2 className={styles.grid__title}>Cities</h2>\n            <p className={styles.grid__subtitle}>Coming soon...</p>\n          </div>\n        </a>\n\n        {/* <a href=\"#\" className={styles.grid__content} target=\"_blank\">\n    <img\n      src={spb}\n      alt=\"Вид из окна поезда\"\n      className={styles.grid__item}\n    />\n    \n    <div className={styles.grid__overlay}>\n      <h2 className={styles.grid__title}>Renamed Cities</h2>\n      <p className={styles.grid__subtitle}>Coming soon...</p>\n    </div>\n  </a> */}\n\n        <a href=\"#\" className={styles.grid__content} target=\"_blank\">\n          <img\n            src={chukotka}\n            alt=\"Вид из окна поезда\"\n            className={styles.grid__item}\n          />\n          {/* <!-- <div className={styles.grid__item} style=\"background-color: #93BBA0;\"></div> --> */}\n          <div className={styles.grid__overlay}>\n            <h2 className={styles.grid__title}>Geographical Darts</h2>\n            <p className={styles.grid__subtitle}>Coming soon...</p>\n          </div>\n        </a>\n\n        {/* <a href=\"{{url_for('contact')}}\" className={styles.grid__content} target=\"_blank\">\n    <img\n      src={bratsk}\n      alt=\"Братск\"\n      className={styles.grid__item}\n    />\n    \n    <div className={styles.grid__overlay}>\n      <h2 className={styles.grid__title}>???</h2>\n      <p className={styles.grid__subtitle}>Tell us what you want to see here!</p>\n    </div>\n  </a> */}\n      </section>\n    </div>\n  );\n}\n","/Users/belka/Desktop/React/geo-quizzes/src/components/Authorization/Login.jsx",[],[],"/Users/belka/Desktop/React/geo-quizzes/src/components/Authorization/SignUp.jsx",[],[],"/Users/belka/Desktop/React/geo-quizzes/src/hooks/useForm.js",["87"],[],"import React from \"react\";\nimport { useState } from \"react\";\n\nexport function useForm(inputValues) {\n    const [values, setValues] = useState(inputValues);\n  \n    const handleChange = (event) => {\n      const {value, name} = event.target;\n      setValues({...values, [name]: value});\n    };\n    return {values, handleChange, setValues};\n  }","/Users/belka/Desktop/React/geo-quizzes/src/utils/auth.js",[],[],"/Users/belka/Desktop/React/geo-quizzes/src/components/Authorization/InfoTooltip.jsx",[],[],"/Users/belka/Desktop/React/geo-quizzes/src/components/ProtectedRoute.js",[],[],"/Users/belka/Desktop/React/geo-quizzes/src/components/Profile/Profile.jsx",[],[],{"ruleId":"88","severity":1,"message":"89","line":29,"column":6,"nodeType":"90","endLine":29,"endColumn":18,"suggestions":"91"},{"ruleId":"92","severity":1,"message":"93","line":2,"column":10,"nodeType":"94","messageId":"95","endLine":2,"endColumn":14},{"ruleId":"92","severity":1,"message":"96","line":6,"column":10,"nodeType":"94","messageId":"95","endLine":6,"endColumn":20},{"ruleId":"88","severity":1,"message":"97","line":10,"column":6,"nodeType":"90","endLine":10,"endColumn":32,"suggestions":"98"},{"ruleId":"92","severity":1,"message":"93","line":3,"column":10,"nodeType":"94","messageId":"95","endLine":3,"endColumn":14},{"ruleId":"92","severity":1,"message":"99","line":6,"column":8,"nodeType":"94","messageId":"95","endLine":6,"endColumn":11},{"ruleId":"92","severity":1,"message":"100","line":8,"column":8,"nodeType":"94","messageId":"95","endLine":8,"endColumn":14},{"ruleId":"101","severity":1,"message":"102","line":68,"column":9,"nodeType":"103","endLine":68,"endColumn":69},{"ruleId":"101","severity":1,"message":"102","line":90,"column":9,"nodeType":"103","endLine":90,"endColumn":70},{"ruleId":"92","severity":1,"message":"104","line":1,"column":8,"nodeType":"94","messageId":"95","endLine":1,"endColumn":13},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'navigate'. Either include it or remove the dependency array.","ArrayExpression",["105"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'windowPath' is assigned a value but never used.","React Hook useEffect has an unnecessary dependency: 'window.location.pathname'. Either exclude it or remove the dependency array. Outer scope values like 'window.location.pathname' aren't valid dependencies because mutating them doesn't re-render the component.",["106"],"'spb' is defined but never used.","'bratsk' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","'React' is defined but never used.",{"desc":"107","fix":"108"},{"desc":"109","fix":"110"},"Update the dependencies array to be: [isLoggedIn, navigate]",{"range":"111","text":"112"},"Update the dependencies array to be: []",{"range":"113","text":"114"},[946,958],"[isLoggedIn, navigate]",[322,348],"[]"]